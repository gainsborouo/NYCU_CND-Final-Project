services:
  minio:
    image: quay.io/minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001" # 9000 for S3 API, 9001 for MinIO Console
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin1234
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app_network

  minio-api:
    build:
      context: ./minio
      dockerfile: Dockerfile
    container_name: minio-api
    ports:
      - "8000:8000"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=admin1234
      - MINIO_SECURE=false
    depends_on:
      - minio
    networks:
      - app_network
  flow:
    build: ./backend/flow
    container_name: flow
    depends_on:
      flow_db:
        condition: service_healthy
    # ports:
    #   - "8000:8000"
    env_file:
      - ./backend/flow/.env
    networks:
      - app_network
  flow_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      PGUSER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
<<<<<<< HEAD
    # ports:
    #   - "5432:5432"
    networks:
      - app_network
=======

    ports:
      - "5432:5432"
>>>>>>> origin/main
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin","-d", "database"]
      interval: 10s
      timeout: 5s
<<<<<<< HEAD
      retries: 5  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    # depends_on:
    #   - minio-api
    #   - flow
    networks:
      - app_network
=======
      retries: 5
    # volumes:
    #   - pg_data:/var/lib/postgresql/data
    networks:
      - app_network

>>>>>>> origin/main
networks:
  app_network:
    driver: bridge

volumes:
  minio_data:
