apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes 1;

    events { worker_connections 1024; }
    http {
      map $http_origin $cors_origin {
          default "";
          "http://localhost:8080" $http_origin;
      }

      server {
          listen 8080;
          server_name _;

          # Common CORS headers for all locations
          add_header 'Access-Control-Allow-Origin' $cors_origin always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;

          # Frontend route
          location / {
              proxy_pass http://frontend;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # SPA handling - route all non-file requests to index.html
              proxy_intercept_errors on;
              error_page 404 = /index.html;
          }

          # Auth service routing
          location /auth/ {
              if ($request_method = 'OPTIONS') {
                  add_header 'Access-Control-Allow-Origin' $cors_origin always;
                  add_header 'Access-Control-Allow-Credentials' 'true' always;
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, PATCH' always;
                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin' always;
                  add_header 'Access-Control-Max-Age' 1728000;
                  add_header 'Content-Type' 'text/plain charset=UTF-8';
                  add_header 'Content-Length' 0;
                  return 204;
              }

              proxy_pass http://auth:8000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header Authorization $http_authorization;
          }
          
          # Flow service routing
          location /flow/ {
              proxy_pass http://flow:8000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header Authorization $http_authorization;
          }
          
          # Minio API routing
          location /minio-api/ {
              proxy_pass http://minio-api:8000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
          
          # Minio server routing
          location /minio/ {
              proxy_pass http://minio:9000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          }
          
          # Minio console routing
          location /minio-console/ {
              proxy_pass http://minio:9001/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          }
      }
    }
